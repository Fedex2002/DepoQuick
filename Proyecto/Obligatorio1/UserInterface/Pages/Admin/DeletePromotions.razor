@page "/DeletePromotions"
@using Logic
@using Model;
@using Model.Enums
@using System.Reflection.Emit
@using Logic.DTOs
@layout MainLayout
@inject PromotionLogic promotionLogic

<PageTitle>DepoQuick</PageTitle>

<section class="vh-75">
    <div class="container-fluid h-custom">
        <div class="row d-flex justify-content-center align-items-center h-75">
            <div class="col-md-8 col-lg-6 col-xl-4 offset-xl-1">
                <form>
                    @* <div class="divider d-flex align-items-center my-4"> *@
                    @*     <p class="text-center fw-bold mx-3 mb-0 fs-4">Delete Promotion</p> *@
                    @* </div> *@
                    @* <div data-mdb-input-init class="form-outline mb-2"> *@
                    @*     <input class="form-control form-control-lg" placeholder="Enter Label" @bind="label" required/> *@
                    @*     <label class="form-label" >Label</label> *@
                    @* </div> *@
                    @* <div data-mdb-input-init class="form-outline mb-2"> *@
                    @*     <input class="form-control form-control-lg" placeholder="Enter discount" @bind="discount" required/> *@
                    @*     <label class="form-label" >Discount</label> *@
                    @* </div> *@
                    @* <div data-mdb-input-init class="form-outline mb-2"> *@
                    @*     <input type="date" class="form-control form-control-lg" @bind="dateStart" required/> *@
                    @*     <label class="form-label" >DateStart</label> *@
                    @* </div> *@
                    @* <div data-mdb-input-init class="form-outline mb-2"> *@
                    @*     <input type="date" class="form-control form-control-lg" @bind="dateEnd" required/> *@
                    @*     <label class="form-label" >DateEnd</label> *@
                    @* </div> *@
                    <div data-mdb-input-init class="form-outline mb-2">
                        <label class="form-label">Select Promotion to Delete</label>
                        <select class="form-select form-select-lg" @onchange="SelectedPromotion">
                            @foreach (var promotion in promotionLogic.GetPromotionsDto())
                            {
                                <option value="@promotion.Label">
                                    @($"{promotion.Label} - {promotion.Discount}% off - From: {promotion.DateStart.ToShortDateString()} To: {promotion.DateEnd.ToShortDateString()}")
                                </option>
                            }
                        </select>
                    </div>
                    <div class="text-center text-lg-start pt-2">
                        <button type="button" class="btn btn-primary btn-lg" style="padding-left: 2.5rem; padding-right: 2.5rem;" @onclick="HandleValidSubmit">Delete the Promotion</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

@if (showAdminErrorModal)
{
  <AuthenticationModal
    Title="Promotion does not exist"
    Text="@errorMessage"
    DialogType=AuthenticationModal.ModalDialogType.Ok
    OnClose="@ClosePromotionErrorModal">
  </AuthenticationModal>
}
@if(showAdminConfirmationModal)
{
    <AuthenticationModal 
      Title="Promotion deleted successfully"
      Text="Promotion deleted successfully"
      DialogType=AuthenticationModal.ModalDialogType.Ok
      OnClose="@ClosePromotionConfirmationModal">
    </AuthenticationModal>
}

@code {
    PromotionDto promotionDto;
    private string Selectedlabel;
    private bool showAdminErrorModal = false;
    private string errorMessage = "";
    private bool showAdminConfirmationModal = false;
    
    protected override void OnInitialized()
    {
        promotionDto = new PromotionDto();
    }
    
    private void SelectedPromotion(ChangeEventArgs e)
    {
        Selectedlabel = e.Value.ToString();
        //promotionDto = promotionLogic.GetPromotionDto(Selectedlabel);
    }
    
    private async Task HandleValidSubmit()
    {
        try
        {
            promotionLogic.RemovePromotion(promotionDto);
            showAdminConfirmationModal = true;
        }
        catch (Exception e)
        {
            showAdminErrorModal = true;
            errorMessage = e.Message;
        }
    }
    
    private void ClosePromotionErrorModal()
    {
        showAdminErrorModal = false;
    }
  
    private void ClosePromotionConfirmationModal()
    {
        showAdminConfirmationModal = false;
    }
}