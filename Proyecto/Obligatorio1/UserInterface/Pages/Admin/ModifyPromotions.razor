@page "/ModifyPromotions"

@using Controllers.Dtos

@using Controllers.Interfaces
@layout MainLayout

@inject IPromotionController PromotionController


<PageTitle>DepoQuick</PageTitle>

<section class="vh-75">
    <div class="container-fluid h-custom">
        <div class="row d-flex justify-content-center align-items-center h-75">
            <div class="col-md-8 col-lg-6 col-xl-4 offset-xl-1">
                <form @onsubmit="HandleValidSubmit">
                    <div class="divider d-flex align-items-center my-4">
                        <p class="text-center fw-bold mx-3 mb-0 fs-4">Modify Promotion</p>
                    </div>
                    <div class="mb-3">
                        <table class="table table-bordered">
                            <thead>
                            <tr>
                                <th>Promotions</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var promotion in PromotionController.GetPromotionsDto())
                            {
                                <tr>
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" name="selectedPromotion" value="@promotion.Label" @onclick="() => SetSelectedPromotion(promotion.Label)" required />
                                            <label class="form-check-label">@promotion.Label</label>
                                        </div>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                    <div data-mdb-input-init class="form-outline mb-2">
                        <input class="form-control form-control-lg" @bind="_newLabel" placeholder="Enter new Label" required/>
                        <label class="form-label" >New Label</label>
                    </div>
                    <div data-mdb-input-init class="form-outline mb-2">
                        <input class="form-control form-control-lg" @bind="_newDiscount" placeholder="Enter new discount" required/>
                        <label class="form-label" >New Discount</label>
                    </div>
                    <div data-mdb-input-init class="form-outline mb-2">
                        <input type="date" class="form-control form-control-lg" @bind="_newDateStart" required/>
                        <label class="form-label" >New DateStart</label>
                    </div>
                    <div data-mdb-input-init class="form-outline mb-2">
                        <input type="date" class="form-control form-control-lg" @bind="_newDateEnd" required/>
                        <label class="form-label" >New DateEnd</label>
                    </div>
                    <div class="text-center text-lg-start pt-2">
                        <button type="submit" class="btn btn-primary btn-lg" style="padding-left: 2.5rem; padding-right: 2.5rem;">Modify the Promotion</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

@if (_showAdminErrorModal)
{
  <AuthenticationModal
    Title="Promotion error"
    Text="@_errorMessage"
    DialogType=AuthenticationModal.ModalDialogType.Ok
    OnClose="@ClosePromotionErrorModal">
  </AuthenticationModal>
}

@if(_showAdminConfirmationModal)
{
    <AuthenticationModal 
      Title="Promotion modified successfully"
      Text="Promotion modified successfully"
      DialogType=AuthenticationModal.ModalDialogType.Ok
      OnClose="@ClosePromotionConfirmationModal">
    </AuthenticationModal>
}
@code {
    PromotionDto _newPromotion;
    private string _oldLabel;
    private string _newLabel;
    private int _newDiscount;
    private DateTime _newDateStart;
    private DateTime _newDateEnd;
    private bool _showAdminConfirmationModal = false;
    private bool _showAdminErrorModal = false;
    private string _errorMessage = "";

    protected override void OnInitialized()
    {
        _newPromotion = new PromotionDto();
        _newDateStart = DateTime.Today;
        _newDateEnd = DateTime.Today;
    }

    private void SetSelectedPromotion(string label)
    {
        _oldLabel = label;
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            _newPromotion = new PromotionDto(_newLabel, _newDiscount, _newDateStart, _newDateEnd);

            PromotionController.ModifyPromotion(_oldLabel, _newPromotion); 

            _showAdminConfirmationModal = true;
            
        }
        catch (Exception e)
        {
            _showAdminErrorModal = true;
            _errorMessage = e.Message;
        }
    }
    
    private void ClosePromotionConfirmationModal()
    {
        _showAdminConfirmationModal = false;
    }
    
    private void ClosePromotionErrorModal()
    {
        _showAdminErrorModal = false;
    }

}
