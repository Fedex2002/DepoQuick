@page "/SetDateStorageUnit"
@using Logic.DTOs
@using Logic
@inject StorageUnitLogic storageUnitLogic

<section class="vh-75">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mt-5 mb-4">
            <h2 class="mb-0">Set possible booking days for Storage Units</h2>
        </div>
        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th>StorageUnit data</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody>
                    @if (storageUnits.Count == 0)
                    {
                        <tr>
                            <td colspan="4">No storage units found</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var storageUnit in storageUnits)
                        {
                            <tr>
                                <td>
                                    <strong>Id:</strong>@storageUnit.Id<br/>
                                    <strong>Area:</strong>@storageUnit.Area<br/>
                                    <strong>Size:</strong>@storageUnit.Size<br/>
                                    <strong>Climatization:</strong>@storageUnit.Climatization<br/>
                                    @foreach (var promotion in storageUnit.Promotions)
                                    {
                                        <div>
                                            <br/>
                                            <p style="margin-bottom: 0;">Promotion</p>
                                            <strong>Label:</strong> @promotion.Label<br/>
                                            <strong>Discount:</strong> @promotion.Discount<br/>
                                            <strong>StartDate:</strong> @promotion.DateStart.ToShortDateString()<br/>
                                            <strong>EndDate:</strong> @promotion.DateEnd.ToShortDateString()<br/>
                                        </div>
                                    }
                                </td>
                                <td>
                                    <input type="date" class="form-control form-control-lg" @bind="dateStart" required/>
                                    <label class="form-label">DateStart</label>
                                </td>
                                <td>
                                    <input type="date" class="form-control form-control-lg" @bind="dateEnd" required/>
                                    <label class="form-label">DateEnd</label>
                                </td>
                                <td>
                                    <button type="submit" class="btn btn-primary btn-lg" style="padding-left: 2.5rem; padding-right: 2.5rem;">Set possible booking date</button>
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>

@if (showAdminErrorModal)
{
  <AuthenticationModal
    Title="StorageUnit error"
    Text="@errorMessage"
    DialogType=AuthenticationModal.ModalDialogType.Ok
    OnClose="@CloseStorageUnitErrorModal">
  </AuthenticationModal>
}
@if(showAdminConfirmationModal)
{
    <AuthenticationModal 
      Title="StorageUnit date set successfully"
      Text="StorageUnit date set successfully"
      DialogType=AuthenticationModal.ModalDialogType.Ok
      OnClose="@CloseStorageUnitConfirmationModal">
    </AuthenticationModal>
}


@code {
    private List<StorageUnitDto> storageUnits;
    private DateTime dateStart;
    private DateTime dateEnd;
    private bool showAdminErrorModal;
    private string errorMessage = "";
    private bool showAdminConfirmationModal;

    protected override void OnInitialized()
    {
        storageUnits = storageUnitLogic.GetStorageUnitsDto();
        dateStart = DateTime.Today;
        dateEnd = DateTime.Today;
    }
    
    private void CloseStorageUnitErrorModal()
    {
        showAdminErrorModal = false;
    }

    private void CloseStorageUnitConfirmationModal()
    {
        showAdminConfirmationModal = false;
    }

}