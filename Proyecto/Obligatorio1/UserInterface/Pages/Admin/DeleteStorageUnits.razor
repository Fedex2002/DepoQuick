@page "/DeleteStorageUnits"
@using Logic
@using Logic.DTOs
@layout MainLayout
@inject StorageUnitLogic storageUnitLogic

<PageTitle>DepoQuick</PageTitle>

<section class="vh-75">
    <div class="container">
        <h2 class="mt-5 mb-4">Delete StorageUnits</h2>
        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>StorageUnit Id</th>
                            <th>Area</th>
                            <th>Size</th>
                            <th>Climatization</th>
                            <th>Promotions</th>
                            <th>Date Ranges</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (_storageUnits.Count == 0)
                        {
                            <tr>
                                <td colspan="7">No storage units found</td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var storageUnit in _storageUnits)
                            {
                                <tr>
                                    <td>@storageUnit.Id</td>
                                    <td>@storageUnit.Area</td>
                                    <td>@storageUnit.Size</td>
                                    <td>@storageUnit.Climatization</td>
                                    <td>
                                        @if (storageUnit.Promotions.Count == 0)
                                        {
                                            <p>No promotions set</p>
                                        }
                                        else
                                        {
                                            @foreach (var promotion in storageUnit.Promotions)
                                            {
                                                <div>
                                                    <strong>Label:</strong> @promotion.Label<br/>
                                                    <strong>Discount:</strong> @promotion.Discount<br/>
                                                    <strong>StartDate:</strong> @promotion.DateStart<br/>
                                                    <strong>EndDate:</strong> @promotion.DateEnd<br/>
                                                </div>
                                            }
                                        }
                                    </td>
                                    <td>
                                         @if (storageUnit.AvailableDates.Count == 0)
                                         {
                                             <p>No date ranges set</p>
                                         }
                                         else
                                         {
                                             var dateRangeCount = 1; 
                                             @foreach (var dateRange in storageUnit.AvailableDates) 
                                             { 
                                                 <div>
                                                     <p style="margin-bottom: 0;">Date Range @dateRangeCount</p>
                                                     <strong>Start Date:</strong> @dateRange.StartDate.ToString("dd/MM/yyy")<br/>
                                                     <strong>End Date:</strong> @dateRange.EndDate.ToString("dd/MM/yyy")<br/>
                                                 </div>
                                                 dateRangeCount++;
                                             }
                                         }
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-danger" @onclick="() => HandleValidSubmit(storageUnit.Id)">Delete</button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>

@if(_showAdminConfirmationModal)
{
    <AuthenticationModal 
      Title="StorageUnit deleted successfully"
      Text="StorageUnit deleted successfully"
      DialogType=AuthenticationModal.ModalDialogType.Ok
      OnClose="@ClosePromotionConfirmationModal">
    </AuthenticationModal>
}

@code {
    StorageUnitDto _storageUnitDto;
    private List<StorageUnitDto> _storageUnits;
    private bool _showAdminErrorModal = false;
    private bool _showAdminConfirmationModal = false;
    
    protected override void OnInitialized()
    {
        _storageUnitDto = new StorageUnitDto();
        _storageUnits = storageUnitLogic.GetStorageUnitsDto();
    }
    
    private async Task HandleValidSubmit(string id)
    {
        _storageUnitDto = storageUnitLogic.GetStorageUnitDtoFromId(id);
        storageUnitLogic.RemoveStorageUnit(_storageUnitDto);
        _showAdminConfirmationModal = true;
        _storageUnits = storageUnitLogic.GetStorageUnitsDto();
    }
  
    private void ClosePromotionConfirmationModal()
    {
        _showAdminConfirmationModal = false;
    }
}